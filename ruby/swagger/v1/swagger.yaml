openapi: 3.0.1
info:
  title: API V1
  description: API documentation
  version: 'v1'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /api/v1/signup:
    post:
      summary: User Registration
      description: Register a new user with email, password, and other details
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@example.com
                password:
                  type: string
                  example: Password123!
                password_confirmation:
                  type: string
                  example: Password123!
                id_number:
                  type: string
                  example: 123456
                first_name:
                  type: string
                  example: John
                middle_name:
                  type: string
                  example: A.
                last_name:
                  type: string
                  example: Doe
                birthday:
                  type: string
                  format: date
                  example: "1990-01-01"
                profile_photo:
                  type: string
                  format: binary
                course:
                  type: string
                  example: Computer Science
                contact_number:
                  type: string
                  example: +1234567890
                emergency_contact:
                  type: string
                  example: Jane Doe
                emergency_contact_number:
                  type: string
                  example: +0987654321
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: test@example.com
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-02-09T13:21:38.239Z"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      password:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      id_number:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      first_name:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      last_name:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      birthday:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      contact_number:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      emergency_contact:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
                      emergency_contact_number:
                        type: array
                        items:
                          type: string
                          example: "can't be blank"
  /api/v1/login:
    post:
      summary: User Login
      description: Log in a user with email or ID number and password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    login:
                      type: string
                      example: test@example.com
                    password:
                      type: string
                      example: Password123!
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: your_jwt_token_here
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: test@example.com
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /api/v1/password:
    post:
      summary: Forgot Password
      description: Send password reset instructions to the user's email
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: test@example.com
      responses:
        '200':
          description: Password reset instructions sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Password reset instructions have been sent to your email.
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: Email not found
    put:
      summary: Update Password
      description: Update the user's password using the reset token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    reset_password_token:
                      type: string
                      example: your_reset_password_token_here
                    password:
                      type: string
                      example: NewPassword123!
                    password_confirmation:
                      type: string
                      example: NewPassword123!
      responses:
        '200':
          description: Password has been successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Password has been successfully updated.
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: Token is invalid or expired
  /api/v1/user:
    get:
      summary: Get Current User
      description: Retrieve the details of the currently authenticated user
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email:
                    type: string
                    example: test@example.com
                  first_name:
                    type: string
                    example: John
                  middle_name:
                    type: string
                    example: A.
                  last_name:
                    type: string
                    example: Doe
                  birthday:
                    type: string
                    format: date
                    example: "1990-01-01"
                  profile_photo_url:
                    type: string
                    example: /rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBd0E9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f2b2c2e2
  /api/v1/time_entries:
    get:
      summary: Get User Time Entries
      description: Retrieve the user's time entries for the specified month and year, or the current month by default
      tags:
        - Time Entries
      security:
        - BearerAuth: []
      parameters:
        - name: month
          in: query
          description: The month for which to retrieve time entries (e.g., 02)
          required: false
          schema:
            type: string
            example: "02"
        - name: year
          in: query
          description: The year for which to retrieve time entries (e.g., 2025)
          required: false
          schema:
            type: string
            example: "2025"
      responses:
        '200':
          description: User time entries retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        date:
                          type: string
                          format: date
                          example: "2025-02-28"
                        time:
                          type: string
                          format: time
                          example: "09:00:00"
                        status:
                          type: string
                          example: time_in
                        user_id:
                          type: integer
                          example: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
    post:
      summary: Check In/Check Out
      description: Toggle between check-in (time in) and check-out (time out)
      tags:
        - Time Entries
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Checked out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Checked out successfully
                  time_entry:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      date:
                        type: string
                        format: date
                        example: "2025-02-28"
                      time:
                        type: string
                        format: time
                        example: "17:00:00"
                      status:
                        type: string
                        example: time_out
                      user_id:
                        type: integer
                        example: 1
        '201':
          description: Checked in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Checked in successfully
                  time_entry:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      date:
                        type: string
                        format: date
                        example: "2025-02-28"
                      time:
                        type: string
                        format: time
                        example: "09:00:00"
                      status:
                        type: string
                        example: time_in
                      user_id:
                        type: integer
                        example: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /api/v1/overview:
    get:
      summary: Get Last Two Time Entries
      description: Retrieve the last two time entries of the user for the current date
      tags:
        - Overview
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Last two time entries retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        date:
                          type: string
                          format: date
                          example: "2025-02-28"
                        time:
                          type: string
                          format: time
                          example: "09:00:00"
                        status:
                          type: string
                          example: time_in
                        user_id:
                          type: integer
                          example: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized                 